name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build-output
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node & Bun
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun & node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: |
            ./dist
            packages/**/dist

  test:
    name: Test • ${{ matrix.os }} • Node ${{ matrix.node }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        node: [ 20, 22, 24 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: ./

      - name: Setup Node & Bun
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun & node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun run lint

      - name: Type-check
        run: bun run check-types

      - name: Unit tests
        run: bun run test

      - name: Coverage
        run: bun run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dry-lint/dry-lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  verify-artifacts:
    name: Artifact checks (Node 22 • Linux)
    needs: [ build, test ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: ./

      - name: Fail if CLI > 200 kB gz
        run: |
          FILE=./packages/cli/dist/index.js
          RAW_SIZE=$(gzip -c "$FILE" | wc -c)
          echo "CLI gzipped size: $((RAW_SIZE/1024)) kB"
          if [ "$RAW_SIZE" -gt $((200*1024)) ]; then
            echo "❌ CLI exceeds 200 kB gzipped" >&2
            exit 1
          fi

  codeql:
    name: CodeQL (JavaScript/TypeScript)
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node & Bun
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: oven-sh/setup-bun@v2

      - name: Cache Bun & node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: Build for CodeQL database
        run: bun run build

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript-typescript'
