name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Test • ${{ matrix.os }} • Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [20, 22, 24]

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'bun'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install deps (cached)
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Lint
        run: bun run lint

      - name: Type-check
        run: bun run check-types

      - name: Unit tests
        run: bun run test

  verify-artifacts:
    name: 📦 Artifact checks (Node 22 • Linux)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'bun'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install deps (cached)
        run: bun install --frozen-lockfile

      - name: Build CLI (for size check)
        run: bun run build

      - name: Fail if CLI > 200 kB gz
        run: |
          SIZE=$(bunx pkg-size ./packages/cli --json | jq '.gzipped')
          echo "CLI gzipped size: $((SIZE/1024)) kB"
          test "$SIZE" -le $((200*1024)) || {
            echo "❌ CLI exceeds 200 kB gzipped" >&2
            exit 1
          }

      - name: Coverage
        run: bun run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dry-lint/dry-lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  codeql:
    name: 🔒 CodeQL (JavaScript/TypeScript)
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: Build
        run: |
          bun install --frozen-lockfile
          bun run build

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript"